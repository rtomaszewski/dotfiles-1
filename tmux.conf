# vim like navigation
setw -g mode-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+

# scrolling with page-up
# bind -n Pageup copy-mode -u
set -g default-terminal "screen-256color"
# accomodate tmux navigator
# smart pane switching with awareness of vim splits
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# easier splitting
# Horizontal splits with s or C-s
unbind s
unbind C-s
bind-key s split-window
bind-key C-s split-window

# Vertical split with v or C-v
unbind v
unbind C-v
# New window with default path set to last path
bind s split-window -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# pane joining
bind-key S choose-window 'join-pane -v -s "%%"'
bind-key V choose-window 'join-pane -h -s "%%"'

# mouse
set-window-option -g mode-mouse on
set-option -g mouse-select-pane on
set-option -g mouse-select-window on
set-option -g mouse-resize-pane

#C&p
# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection
bind-key -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Faster command sequences
set -s escape-time 0

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter
bind-key -t vi-copy Enter copy-pipe "reattach-to-user-namespace pbcopy"

# shell
set-option -g default-shell /bin/zsh
# Not needed anymore:
# https://robots.thoughtbot.com/tmux-copy-paste-on-os-x-a-better-futur://robots.thoughtbot.com/tmux-copy-paste-on-os-x-a-better-future
# set-option -g default-command "reattach-to-user-namespace -l zsh"
set-option -g set-titles on
# set-option -g set-titles-string "#T"

# interactively select session
bind z choose-session
# fix jumping by word
unbind C-Left
unbind C-Right

# after copying to a tmux buffer, hit y again to copy to clipboard
bind y run "tmux save-buffer - | reattach-to-user-namespace pbcopy"
bind-key r source-file ~/.tmux.conf \; display "Config reloaded!"

# word jumping
set-window-option -g xterm-keys on

# history limit
set -g history-limit 20000

# automatic window renumbering
set-option -g renumber-windows off
# disable auto rename
set-option -g allow-rename on
set-window-option -g automatic-rename on

# enable UTF-8
set-window-option -g utf8 on
set -g status-utf8 on

# status bar
set -g status-utf8 off
set -g status-left ''
set -g status-right '#S'
set -g status-right-style bg=colour235,fg=colour1,noreverse
set -g status-position top

# status format
set-option -g status-bg colour235
set-option -g status-fg colour1

set -g window-status-format "#[fg=colour232,bg=colour12] #I #[fg=colour246,bg=colour235] #{?window_bell_flag,#[fg=colour1]!#[fg=colour0]#[bg=colour1],}#{=-15:window_name}#[default] "
set -g window-status-activity-style "fg=colour52,bg=colour52"
set -g window-status-current-format "#[fg=colour235,bg=colour154] #I #[fg=colour255,bg=colour235] #{=-15:window_name} #[default]"
set -g window-status-separator ''
setw -g window-status-bell-style none


# link shared IRC window
link-window -s "shared:irc" -t 9
bind I link-window -s "shared:irc" -t 9
bind K unlink-window

set -g monitor-activity on
